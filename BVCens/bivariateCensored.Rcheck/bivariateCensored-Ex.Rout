
R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "bivariateCensored"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('bivariateCensored')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("bivariateNPMLE")
> ### * bivariateNPMLE
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: bivariateNPMLE
> ### Title: Computes the MLE for Bivariate Interval Censored Data
> ### Aliases: bivariateNPMLE
> 
> ### ** Examples
> 
>   testData <- simBVCen()
>   #simulate bivariate interval censored data
>   
>   bvcensFit <- bivariateNPMLE(testData)
>   #Finds the MLE
>   
>   bvcensFit
Bivariate Interval Censored Optimizer Object
Final log likelihood =  -1746.673 
Numeric Error =  6.782241e-11 
Total iterations =  411 
Outer iterations =  5 
Number of maximal intersections =  90 
Number of maximal intersections w/ positive mass =  90 
> 
> 
> 
> cleanEx()
> nameEx("optCliq")
> ### * optCliq
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: optCliq
> ### Title: Computes the MLE for a Binary Mixture Model
> ### Aliases: optCliq
> 
> ### ** Examples
> 
> testData <- simBVCen()
> #simulate bivariate interval censored data
> 
> cliqMat <- MLEcens::reduc(testData, cm = TRUE)$cm
> #computes the cliqMat associated with data
> 
> cliqMat <- t(cliqMat)
> #reduc returns an m x n matrix, so
> #needs to be transposed for compatibility with optCliq
> 
> cliqFit <- optCliq(cliqMat)
> #optimizes the component weights for clique matrix
> 
> cliqFit 
Clique Optimizer Object
Final log likelihood =  -1746.673 
Numeric Error =  6.782241e-11 
Total iterations =  411 
Outer iterations =  5 
> 
> 
> 
> cleanEx()
> nameEx("simBVCen")
> ### * simBVCen
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simBVCen
> ### Title: Simulates Bivariate Interval Censored Data
> ### Aliases: simBVCen
> 
> ### ** Examples
> 
>   testData <- simBVCen()
>   #simulate bivariate interval censored data
>   
>  bvcenFit <- bivariateNPMLE(testData)
>  
>  bvcenFit
Bivariate Interval Censored Optimizer Object
Final log likelihood =  -1746.673 
Numeric Error =  6.782241e-11 
Total iterations =  411 
Outer iterations =  5 
Number of maximal intersections =  90 
Number of maximal intersections w/ positive mass =  90 
> 
> 
> 
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  2.728 0.109 2.838 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
